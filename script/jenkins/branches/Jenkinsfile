pipeline {
  agent any

  stages {
    stage('ci') {
      parallel {

        stage('lint') {
          steps {
            sh '''#!/bin/bash
            export PATH=$PATH:$CONDAPATH
            source activate petals_env
            rm -f pylint.log
            pylint -ry climada_petals | tee pylint.log
            '''

            discoverGitReferenceBuild referenceJob: 'petals_branches/develop'
            recordIssues tools: [pyLint(pattern: 'pylint.log')]
          }
        }

        stage('unit_test') {
          steps {
            sh script/jenkins/branches/run_unittest.sh
          }
        }

      }
    }
  }

  post {
    always {
      junit 'tests_xml/*.xml'
      cobertura coberturaReportFile: 'coverage.xml'
    }
  }
}
